/*
  This file is for app-specific global styles for 'apps/landing'.
  Base styles, Tailwind directives (@tailwind base, components, utilities),
  CSS variable definitions, and shared scrollbar styles are now primarily handled
  by `packages/ui/src/styles/globals.css` and imported via `ClientThemeProvider` in `_app.tsx`.

  You can add landing-app-specific global styles here if absolutely necessary,
  but prefer Tailwind utility classes or component-scoped styles whenever possible.
*/

/* The Inter font is already imported in packages/ui/src/styles/globals.css */
/* @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap'); */

html {
  scroll-behavior: smooth;
}

/* body font-family is set by packages/ui global styles */

/* Landing-specific animations (float, pulse-glow) are now defined in apps/landing/tailwind.config.js */
/* Other animations like bounce-in, slide-in-left/right should be converted to Tailwind utilities if possible,
   or defined in tailwind.config.js if they are widely used within this app. */

/*
  Custom utility classes like .glass, .hover-lift, .btn-primary, .form-input etc.
  should ideally be replaced by using ShadCN/UI components from packages/ui
  and Tailwind CSS utility classes directly in the JSX.
  Avoid defining custom global CSS classes that replicate Tailwind's purpose or ShadCN component styling.
  The GradientText component is now centralized in packages/ui.
*/

/* Example: .hero-bg could be defined in tailwind.config.js or applied as inline style if truly unique */
/* This specific hero-bg is kept as an example of an app-specific global style. */
.hero-bg {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary-foreground)) 100%); /* Updated to use theme variables */
}


/* If .bg-grid-pattern is specific and reused in landing, it could stay or be a component background */
.bg-grid-pattern {
  background-image:
    linear-gradient(hsla(var(--foreground)/0.05) 1px, transparent 1px), /* Reduced opacity for subtlety */
    linear-gradient(90deg, hsla(var(--foreground)/0.05) 1px, transparent 1px); /* Reduced opacity for subtlety */
  background-size: 20px 20px;
}

/*
  Review all remaining styles. The goal is to have very few global styles here.
  Most styling should come from:
  1. `packages/ui` (ShadCN components and their styles, global CSS variables).
  2. Tailwind utility classes applied directly in your JSX components.
  3. App-specific Tailwind theme extensions in `apps/landing/tailwind.config.js`.
*/
